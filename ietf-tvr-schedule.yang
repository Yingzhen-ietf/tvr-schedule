module ietf-tvr-schedule {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tvr-schedule";
  prefix tvr-schedule;

  import ietf-yang-types {
    prefix "yang";
    reference "RFC 6991: Common YANG Data Types";
  }

  import ietf-interfaces {
    prefix "if";
    reference "RFC 8343: A YANG Data Model for Interface
               Management (NMDA Version)";
  }

  import ietf-logical-network-element {
    prefix "lne";
    reference "RFC 8530: YANG Model for Logical Network Elements";
  }

  organization
    "IETF TVR - Time Variant Routing Working Group";
  contact
    "WG Web:   <http://datatracker.ietf.org/wg/tvr>
     WG List:  <mailto:tvr@ietf.org>

     Author:    Yingzhen Qu
               <mailto:yingzhen.ietf@gmail.com>
     Author:   Acee Lindem
               <mailto:acee.ietf@gmail.com>
     Author:   Marc Blanchet
               <mailto:marc.blanchet@viagenie.ca>";            

  description
    "The YANG module defines some attributes that change with a
     schedule. It can be used to augment existing models.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2023 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";
  reference
    "RFC XXXX: YANG Data Model for Time-Variant Routing";

  revision 2023-06-11 {
    description
      "Initial Version";
    reference
      "RFC XXXX: YANG Data Model for Scheduled Attributes.";
  }

  typedef recurrence-type {
    type enumeration {
      enum once;
      enum hourly;
      enum daily;
      enum weekly;
      enum monthly;
      enum yearly;
    }
    description "Types of recurrence";
  }

  grouping schedule-value {
    container schedule-value {
      list schedules {
        key "start-time";
        leaf start-time {
          type yang:timeticks;
          description 
            "Start time of the scheduled change. The calculation of
            the real start time is to use the base starting time plus
            the timeticks. For example, if a schedule starts at 8:00
            with an hourly recurrence, the start-time will be 8:00
            plus the timeticks.";
        }
        leaf end-time {
          type yang:timeticks;
          description 
            "End time of the scheduled change. The calculation of the
            end-time is the same as the start-time.";
        }
        leaf value {
          type union {
            type boolean;
            type string;
          }
          description 
            "Value for the scheduled attribute during the
             specified time period.
             This can be a simple value, or a string representing
             a value function.";
        }
      }
    }
  }

  grouping schedule {
    container schedule {
      leaf recurrence {
        type recurrence-type;
        description "Type of recurrence";
      }
      leaf start {
        type yang:date-and-time;
        description
          "Start of this schedule.";
      }
      leaf stop {
        type yang:date-and-time;
        description
          "Stop of this schedule.";
      }
      leaf value-default {
        type string;
        description
          "Attribute default value.";
      }
      uses schedule-value;
    }    
  }

  augment "/if:interfaces/if:interface" {
    description
      "Augments interface with scheduled attributes.";
    container scheduled-attributes {
      description
        "Scheduled attributes list, such as scheduled power up
         and down, or bandwidth that changes with time.";
      list scheduled-attribute {
        key "id";
        leaf id {
          type string;
          description
            "ID or name of the scheduled-attribute.";
        }
        uses schedule;
      }
    }
  }

  augment "/lne:logical-network-elements/lne:logical-network-element" {
    description
      "Augments logical network elements with scheduled power
       shutdown.";
    container scheduled-shutdown {
      description
        "Scheduled power up and down.";
      uses schedule;
    }    
  }
}

