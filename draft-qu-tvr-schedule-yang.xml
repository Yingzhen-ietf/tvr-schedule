<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc [
    <!ENTITY RFC2119 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY RFC3688 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
    <!ENTITY RFC6020 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'>
    <!ENTITY RFC6241 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml'>
    <!ENTITY RFC6242 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6242.xml'>
    <!ENTITY RFC6991 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6991.xml'>
    <!ENTITY RFC7950 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7950.xml'>
    <!ENTITY RFC8040 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8040.xml'>
    <!ENTITY RFC8174 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml'>
    <!ENTITY RFC8340 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8340.xml'>
    <!ENTITY RFC8341 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8341.xml'>
    <!ENTITY RFC8342 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8342.xml'>
    <!ENTITY RFC8343 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8343.xml'>
    <!ENTITY RFC8446 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8446.xml'>
    <!ENTITY RFC8530 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8530.xml'>
    <!ENTITY I-D.ietf-tvr-use-cases PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.draft-ietf-tvr-use-cases-00.xml'>
    ]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>

<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" docName="draft-qu-tvr-schedule-yang-00" ipr="trust200902"
     consensus="true" submissionType="IETF" version="3">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

  <title abbrev="TVR Schedule YANG">YANG Model for Scheduled Attributes </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>yingzhen.qu@futurewei.com</email>
      </address>
    </author>
    <author fullname="Acee Lindem" initials="A." surname="Lindem">
      <organization>LabN Consulting LLC</organization>
      <address>
        <postal>
          <street>301 Midenhall Way</street>
          <city>Cary, NC 27513</city>
        </postal>
        <email>acee.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Marc Blanchet" initials="M." surname="Blanchet">
      <organization>Viagenie</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
        </postal>
        <email>marc.blanchet@viagenie.ca</email>
      </address>
    </author>
    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
   in the current day and month for you. If the year is not the current one, it is
   necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
   purpose of calculating the expiry date).  With drafts it is normally sufficient to
   specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
   If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>The YANG model in this document defines attributes that change
        values with a recurring schedule, which can be used to augment existing
        data models.</t>
    </abstract>
  </front>

  <middle>
    <section title="Overview">
      <t>YANG <xref target="RFC7950"></xref> is a data definition language
      used to define the contents of a conceptual data store
      that allows networked devices to be managed using NETCONF
      <xref target="RFC6241"/>.  YANG is proving relevant beyond its
      initial confines, as bindings to other interfaces (e.g., ReST) and
      encodings other than XML (e.g., JSON) are being defined.  Furthermore,
      YANG data models can be used as the basis for implementation of other
      interfaces, such as CLI and programmatic APIs.</t>

      <t>The YANG model in this document defines attributes that change
        values with a schedule, which can be used to augment existing
        data models. </t>

      <t>The YANG modules in this document conform to the Network Management
         Datastore Architecture (NMDA) <xref target="RFC8342"/>.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119"/>
        <xref target="RFC8174"/>.</t>
      </section>
    </section>

    <section title="Tree Diagrams">
      <t> This document uses the graphical representation of data models
          defined in <xref target="RFC8340"/>. </t>
    </section>

    <section title="Design of the model">
      <section title="Schedule Definition">
        <t>The "schedule-value" container defines a list of attributes that change
          values based on a predefined schedule. The "schedules" list
          contains elements that specify a time interval, consisting of a
          start-time and end-time, along with the corresponding value for
          that interval. The "value" leaf is defined as a union, allowing
          it to be a simple boolean value, an integer represented as a
          string, or a value function expressed as a string. For instance,
          the string can represent a value that dynamically changes over
          time using a function such as "2*t+10". The "schedule-value" grouping
          is defined to be used by models or to augment existing models
          with attributes that follow a time schedule.</t>
        <t>The "schedule" container uses the "schedule-value" grouping,
         which includes a leaf called "recurrence" that specifies the repetition
         pattern of the "schedule-value". Additionally the duration of
         this schedule is determined by the starting time "start" and the
         ending time "stop" defined within the container. The "value-default"
         leaf defines the attribute's value when it's not covered by the 
         "schedule-value" in the duration. The "schedule" grouping is
         defined as well.</t>

        <t>The following figure provides an illustration of two attributes and
        their scheduled value changes.</t>
        <figure>
          <name>Time Varying Properties</name>
          <artwork>
          ---------------------------------------
      A1  |       v1          |   v2     |  v3  |
          ---------------------------------------
      A2  |      vv1          |      vv2        |
          ---------------------------------------
          t0                  t1        t2      t3
          </artwork>
        </figure>

        <t>The following is the tree diagram of the grouping
          "schedule".</t>
        <figure>
          <name>Tree diagram of the schedule</name>
          <artwork>
      +--rw schedule
        +--rw recurrence?       recurrence-type
        +--rw start?            yang:date-and-time
        +--rw stop?             yang:date-and-time
        +--rw value-default?    string
        +--rw schedule-value
            +--rw schedules* [start-time]
              +--rw start-time    yang:timeticks
              +--rw end-time?     yang:timeticks
              +--rw value*        union

          </artwork>
        </figure>
      </section>
      <section title="Model Augmentations">
        <t>Grouping "schedule" can be used to augment various models
          with an attribute that changes values based on a predefined schedule.</t>
        <t>In this document, the IETF logical network element model
          <xref target="RFC8530"/> is augmented with a scheduled power
          shutdown using the grouping "schedule". </t>
        <t>The interfaces defined in the ietf-interface
          model <xref target="RFC8343"/> is augmented with a list of
          scheduled attributes using grouping "schedule-value". </t>
        <t> More use cases can be found in <xref target="I-D.ietf-tvr-use-cases"/>.</t>

      </section>

    </section>

  <section title="TVR Schedule YANG Trees">

    <t>The following figure shows the tree diagram of the interface 
      augmentation and LNE augmentation.</t>

      <artwork>
module: ietf-tvr-schedule

  augment /if:interfaces/if:interface:
    +--rw scheduled-attributes
       +--rw scheduled-attribute* [id]
          +--rw id          string
          +--rw schedule
             +--rw recurrence?       recurrence-type
             +--rw start?            yang:date-and-time
             +--rw stop?             yang:date-and-time
             +--rw value-default?    string
             +--rw schedule-value
                +--rw schedules* [start-time]
                   +--rw start-time    yang:timeticks
                   +--rw end-time?     yang:timeticks
                   +--rw value*        union
  augment /lne:logical-network-elements/lne:logical-network-element:
    +--rw scheduled-attribute
       +--rw schedule
          +--rw recurrence?       recurrence-type
          +--rw start?            yang:date-and-time
          +--rw stop?             yang:date-and-time
          +--rw value-default?    string
          +--rw schedule-value
             +--rw schedules* [start-time]
                +--rw start-time    yang:timeticks
                +--rw end-time?     yang:timeticks
                +--rw value*        union

      </artwork>
  </section>


  <section title="TVR Schedule YANG Module">
    <t>The following RFCs are referenced in the "ietf-tvr-schedule" YANG
      module: <xref target="RFC6991"/>, <xref target="RFC8343"/> and
      <xref target="RFC8530"/>.</t>

      <artwork><![CDATA[
<CODE BEGINS> file "ietf-tvr-schedule@2023-06-29.yang"
module ietf-tvr-schedule {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tvr-schedule";
  prefix tvr-schedule;

  import ietf-yang-types {
    prefix "yang";
    reference "RFC 6991: Common YANG Data Types";
  }

  import ietf-interfaces {
    prefix "if";
    reference "RFC 8343: A YANG Data Model for Interface
               Management (NMDA Version)";
  }

  import ietf-logical-network-element {
    prefix "lne";
    reference "RFC 8530: YANG Model for Logical Network Elements";
  }

  organization
    "IETF TVR - Time Variant Routing Working Group";
  contact
    "WG Web:   <http://datatracker.ietf.org/wg/tvr>
     WG List:  <mailto:tvr@ietf.org>

     Author:    Yingzhen Qu
               <mailto:yingzhen.ietf@gmail.com>
     Author:   Acee Lindem
               <mailto:acee.ietf@gmail.com>
     Author:   Marc Blanchet
               <mailto:marc.blanchet@viagenie.ca>";            

  description
    "The YANG module defines some attributes that change with a
     schedule. It can be used to augment existing models.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2023 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";
  reference
    "RFC XXXX: YANG Data Model for Scheduled Attributes";

  revision 2023-06-29 {
    description
      "Initial Version";
    reference
      "RFC XXXX: YANG Data Model for Scheduled Attributes.";
  }

  typedef recurrence-type {
    type enumeration {
      enum once;
      enum hourly;
      enum daily;
      enum weekly;
      enum monthly;
      enum yearly;
    }
    description "Types of recurrence";
  }

  grouping schedule-value {
    container schedule-value {
      list schedules {
        key "start-time";
        leaf start-time {
          type yang:timeticks;
          description 
            "Start time of the scheduled change. The calculation of
            the real start time is to use the base starting time plus
            the timeticks. For example, if a schedule starts at 8:00
            with an hourly recurrence, the start-time will be 8:00
            plus the timeticks.";
        }
        leaf end-time {
          type yang:timeticks;
          description 
            "End time of the scheduled change. The calculation of the
            end-time is the same as the start-time.";
        }
        leaf-list value {
          type union {
            type boolean;
            type string;
          }
          description 
            "Value for the scheduled attribute during the
             specified time period.
             This can be a simple value, or a string representing
             a value function.";
        }
      }
    }
  }

  grouping schedule {
    container schedule {
      leaf recurrence {
        type recurrence-type;
        description "Type of recurrence";
      }
      leaf start {
        type yang:date-and-time;
        description
          "Start of this schedule.";
      }
      leaf stop {
        type yang:date-and-time;
        description
          "Stop of this schedule.";
      }
      leaf value-default {
        type string;
        description
          "Attribute default value.";
      }
      uses schedule-value;
    }    
  }

  augment "/if:interfaces/if:interface" {
    description
      "Augments interface with scheduled attributes.";
    container scheduled-attributes {
      description
        "Scheduled attributes list, such as scheduled power up
         and down, or bandwidth that changes with time.";
      list scheduled-attribute {
        key "id";
        leaf id {
          type string;
          description
            "ID or name of the scheduled-attribute.";
        }
        uses schedule;
      }
    }
  }

  augment "/lne:logical-network-elements/lne:logical-network-element" {
    description
      "Augments logical network elements with scheduled power
       shutdown.";
    container scheduled-shutdown {
      description
        "Scheduled power up and down.";
      uses schedule;
    }    
  }
}

<CODE ENDS>
      ]]></artwork>

  </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="Security" title="Security Considerations">
    <t>The YANG modules specified in this document define a schema for
       data that is designed to be accessed via network
       management protocols such as NETCONF <xref target="RFC6241"/> or
       RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure transport
       layer, and the mandatory-to-implement secure transport is Secure Shell (SSH)
       <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
       mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

   <t>The NETCONF access control model <xref target="RFC8341"/> provides the
      means to restrict access for particular NETCONF or RESTCONF users to a
      pre-configured subset of all available NETCONF or RESTCONF protocol
      operations and content.</t>

      <t>
        There are a number of data nodes defined in ietf-tvr-schedule.yang module
        that are writable/creatable/deletable (i.e., config true, which is the default).
        These data nodes may be considered sensitive or vulnerable in some network
        environments. Write operations (e.g., edit-config) to these data nodes without
        proper protection can have a negative effect on network operations. There are
        the subtrees and data nodes and their sensitivity/vlunerability:
      </t>
      <ul spacing="compact" empty="true">
        <li>/if:interfaces/if:interface/scheduled-attributes</li>
        <li>/lne:logical-network-elements/lne:logical-network-element/scheduled-attribute
        Modifications to these scheduled attributes may result in a
        denial of service.</li>
      </ul>

   <t>Some of the readable data nodes in the ietf-tvr-schedule.yang module
      may be considered sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or notification)
      to these data nodes.</t>

   </section>
<section title="IANA Considerations">
  <t>
    This document registers a URI in the IETF XML registry
    <xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>,
    the following registration is requested to be made:
  </t>

   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-tvr-schedule
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>

   <t>
     This document registers a YANG module in the YANG Module Names
     registry <xref target="RFC6020"/>.
   </t>
   <artwork>
   name: ietf-tvr-schedule
   namespace: urn:ietf:params:xml:ns:yang:ietf-tvr-schedule
   prefix: tvr-schedule
   reference: RFC XXXX
   </artwork>
</section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This document was produced using Marshall Rose's xml2rfc tool.</t>
      <t>The YANG model was developed using the suite of YANG tools written
      and maintained by numerous authors.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      &RFC3688;
      &RFC6020;
      &RFC6241;
      &RFC6242;
      &RFC6991;
      &RFC7950;
      &RFC8040;
      &RFC8174;
      &RFC8341;
      &RFC8342;
      &RFC8343;
      &RFC8446;
      &RFC8530;
    </references>
    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      &RFC8340;
      &I-D.ietf-tvr-use-cases;
    </references>
    
    <section>
      <name>Example: Add a scheduled cost to OSPF interface</name>
      <t>In OSPF (Open Shortest Path First), the interface cost is a
        metric used to determine the preference or desirability of a
        particular link or interface. By default, the OSPF interface
        cost is calculated based on the bandwidth of the interface,
        and it is also configurable.</t>
      <t>This example demonstrates how an OSPF interface can be extended
        with a cost that changes with a schedule.</t>
      <artwork><![CDATA[
module ietf-tvr-ospf-schedule {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tvr-ospf-schedule";
  prefix ospf-schedule;

  import ietf-routing {
    prefix "rt";
    reference
      "RFC 8349: A YANG Data Model for Routing
       Management (NMDA Version)";
  }
  import ietf-ospf {
    prefix "ospf";
    reference
      "RFC 9129: A YANG Data Model for OSPF Protocol";
  }

  import ietf-tvr-schedule {
    prefix "tvr-schedule";
  }

  augment "/rt:routing/rt:control-plane-protocols/"
    + "rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area/"
    + "ospf:interfaces/ospf:interface" {
    container scheduled-cost {
      description
        "Augment OSPF interface with a scheduled interface cost.";
      uses tvr-schedule:schedule;
    }
  }
}
      ]]></artwork>
    </section>
  </back>
</rfc>
